#include <stdio.h>

#include "transmit.hpp"

int frm1[] = {
  0x00, 0x10, 0xa4, 0x7b, 0xea, 0x80, 0x00, 0x12,
  0x34, 0x56, 0x78, 0x90, 0x08, 0x00, 0x45, 0x00,
  0x00, 0x2e, 0xb3, 0xfe, 0x00, 0x00, 0x80, 0x11,
  0x05, 0x40, 0xc0, 0xa8, 0x00, 0x2c, 0xc0, 0xa8,
  0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x1a,
  0x2d, 0xe8, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05,
  0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d,
  0x0e, 0x0f, 0x10, 0x11};

int frm2[] = {
  0x00, 0x10, 0xa4, 0x7b, 0xea, 0x80, 0x00, 0x12,
  0x34, 0x56, 0x78, 0x90, 0x00, 0x2e, 0x45, 0x00,
  0x00, 0x2e, 0xb3, 0xfe, 0x00, 0x00, 0x80, 0x11,
  0x05, 0x40, 0xc0, 0xa8, 0x00, 0x2c, 0xc0, 0xa8,
  0x00, 0x04, 0x04, 0x00, 0x04, 0x00, 0x00, 0x1a,
  0x2d, 0xe8, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05,
  0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d,
  0x0e, 0x0f, 0x10, 0x11};

int frm3[] = {
  0x00, 0x10, 0xa4, 0x7b, 0xea, 0x80, 0x00, 0x12,
  0x34, 0x56, 0x78, 0x90, 0x00, 0x02, 0x45, 0x00,
};

int frm4[] = {
  0x00, 0x10, 0xa4, 0x7b, 0xea, 0x80, 0x00, 0x12,
  0x34, 0x56, 0x78, 0x90, 0x00, 0x02, 0x45, 0x00,
};

typedef struct {
  int* data;
  int len;
}t_frame;

#define frm_inst(f) ((t_frame) {(f), sizeof(f) / sizeof(int)})

t_frame frames[] = {
  frm_inst(frm1),
  frm_inst(frm2),
  frm_inst(frm3),
  frm_inst(frm4)
};

#define FRAMES_CNT sizeof(frames) / sizeof(t_frame)

int main()
{
  int i;
  int j;
  hls::stream<t_axis> m_axis;
  hls::stream<t_m_gmii> m_gmii;
  int correct_frames = 0;
  t_tx_status tx_status;

  for (j = 0; j < FRAMES_CNT; j++) {
    //Put data into A
    for(i=0; i < frames[j].len; i++){
      int last = (i == (frames[j].len - 1));
      m_axis.write((t_axis){frames[j].data[i], 0, last});
    }
    transmit(m_axis, m_gmii, &tx_status);
  }

  while (!m_gmii.empty()) {
     t_m_gmii gmii = m_gmii.read();
     if (gmii.en == 1) {
		 if ((gmii.txd == 0x55) || (gmii.txd == 0xd5)) {
			 printf("PP: Data 0x%x, EN %d, USER %d\n", gmii.txd.to_int(), gmii.en.to_int(), gmii.er.to_int());
			 i = 0;
		 } else {
			 printf("%02d: Data 0x%x, EN %d, USER %d\n", i, gmii.txd.to_int(), gmii.en.to_int(), gmii.er.to_int());
			 i++;
		 }
     } else {
    	 printf("***********************************************************************************\n");
     }

  }

  return 0;
}

  

